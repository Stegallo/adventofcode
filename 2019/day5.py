from unittest.mock import patch
import copy
from utils import load_input
from common import run_get_code, run_get_output


def calculate_1(program):
    result = run_get_output(program, "day5", [1])
    return result[-1]


def calculate_2(program):
    result = run_get_output(program, "day5", [5])
    return result[-1]


def main():
    program = load_input()
    res_1 = calculate_1(program)
    res_2 = calculate_2(program)

    print(f"sol 1: {res_1}")
    print(f"sol 2: {res_2}")


if __name__ == "__main__":
    main()


def run_get_generic(code_in, code_out, input=None, output=None):
    assert run_get_output(code_in, "day5", copy.deepcopy(input)) == output
    assert run_get_code(code_in, "day5", copy.deepcopy(input)) == code_out


def test_run_get_():
    assert run_get_code([1, 0, 0, 0, 99], "day2") == [2, 0, 0, 0, 99]
    assert run_get_code([2, 3, 0, 3, 99], "day2") == [2, 3, 0, 6, 99]
    assert run_get_code([2, 4, 4, 5, 99, 0], "day2") == [2, 4, 4, 5, 99, 9801]
    assert run_get_code([1, 1, 1, 4, 99, 5, 6, 0, 99], "day2") == [
        30,
        1,
        1,
        4,
        2,
        5,
        6,
        0,
        99,
    ]

    run_get_generic([1002, 4, 3, 4, 33], [1002, 4, 3, 4, 99], None, [])
    run_get_generic([3, 1, 99], [3, 99999, 99], [99999], [])
    run_get_generic([4, 1, 99], [4, 1, 99], None, [1])
    run_get_generic([4, 3, 99, 30, 4], [4, 3, 99, 30, 4], None, [30])

    print("\n\n")
    run_get_generic(
        [3, 9, 8, 9, 10, 9, 4, 9, 99, -1, 8],
        [3, 9, 8, 9, 10, 9, 4, 9, 99, 1, 8],
        [8],
        [1],
    )
    run_get_generic(
        [3, 9, 8, 9, 10, 9, 4, 9, 99, -1, 8],
        [3, 9, 8, 9, 10, 9, 4, 9, 99, 0, 8],
        [7],
        [0],
    )
    run_get_generic(
        [3, 9, 8, 9, 10, 9, 4, 9, 99, -1, 8],
        [3, 9, 8, 9, 10, 9, 4, 9, 99, 0, 8],
        [9],
        [0],
    )

    run_get_generic(
        [3, 9, 7, 9, 10, 9, 4, 9, 99, -1, 8],
        [3, 9, 7, 9, 10, 9, 4, 9, 99, 1, 8],
        [7],
        [1],
    )
    run_get_generic(
        [3, 9, 7, 9, 10, 9, 4, 9, 99, -1, 8],
        [3, 9, 7, 9, 10, 9, 4, 9, 99, 0, 8],
        [8],
        [0],
    )
    run_get_generic(
        [3, 9, 7, 9, 10, 9, 4, 9, 99, -1, 8],
        [3, 9, 7, 9, 10, 9, 4, 9, 99, 0, 8],
        [9],
        [0],
    )
    run_get_generic(
        [3, 3, 1108, -1, 8, 3, 4, 3, 99], [3, 3, 1108, 1, 8, 3, 4, 3, 99], [8], [1]
    )
    run_get_generic(
        [3, 3, 1108, -1, 8, 3, 4, 3, 99], [3, 3, 1108, 0, 8, 3, 4, 3, 99], [7], [0]
    )
    run_get_generic(
        [3, 3, 1108, -1, 8, 3, 4, 3, 99], [3, 3, 1108, 0, 8, 3, 4, 3, 99], [9], [0]
    )

    run_get_generic(
        [3, 3, 1107, -1, 8, 3, 4, 3, 99], [3, 3, 1107, 1, 8, 3, 4, 3, 99], [7], [1]
    )
    run_get_generic(
        [3, 3, 1107, -1, 8, 3, 4, 3, 99], [3, 3, 1107, 0, 8, 3, 4, 3, 99], [8], [0]
    )
    run_get_generic(
        [3, 3, 1107, -1, 8, 3, 4, 3, 99], [3, 3, 1107, 0, 8, 3, 4, 3, 99], [9], [0]
    )

    run_get_generic(
        [3, 12, 6, 12, 15, 1, 13, 14, 13, 4, 13, 99, -1, 0, 1, 9],
        [3, 12, 6, 12, 15, 1, 13, 14, 13, 4, 13, 99, 0, 0, 1, 9],
        [0],
        [0],
    )

    run_get_generic(
        [3, 12, 6, 12, 15, 1, 13, 14, 13, 4, 13, 99, -1, 0, 1, 9],
        [3, 12, 6, 12, 15, 1, 13, 14, 13, 4, 13, 99, 1, 1, 1, 9],
        [1],
        [1],
    )
    run_get_generic(
        [3, 3, 1105, -1, 9, 1101, 0, 0, 12, 4, 12, 99, 1],
        [3, 3, 1105, 0, 9, 1101, 0, 0, 12, 4, 12, 99, 0],
        [0],
        [0],
    )

    run_get_generic(
        [3, 3, 1105, -1, 9, 1101, 0, 0, 12, 4, 12, 99, 1],
        [3, 3, 1105, 1, 9, 1101, 0, 0, 12, 4, 12, 99, 1],
        [1],
        [1],
    )
    # fmt: off
    run_get_generic(
        [3, 21, 1008, 21, 8, 20, 1005, 20, 22, 107, 8, 21, 20, 1006, 20, 31, 1106, 0, \
        36, 98, 0, 0, 1002, 21, 125, 20, 4, 20, 1105, 1, 46, 104, 999, 1105, 1, 46, \
        1101, 1000, 1, 20, 4, 20, 1105, 1, 46, 98, 99,],
        [3, 21, 1008, 21, 8, 20, 1005, 20, 22, 107, 8, 21, 20, 1006, 20, 31, 1106, 0, \
        36, 98, 0, 7, 1002, 21, 125, 20, 4, 20, 1105, 1, 46, 104, 999, 1105, 1, 46, \
        1101, 1000, 1, 20, 4, 20, 1105, 1, 46, 98, 99,],
        [7],
        [999],
    )
    # fmt: on
    print("\n\n")
    # fmt: off
    run_get_generic(
        [3, 21, 1008, 21, 8, 20, 1005, 20, 22, 107, 8, 21, 20, 1006, 20, 31, 1106, 0, \
        36, 98, 0, 0, 1002, 21, 125, 20, 4, 20, 1105, 1, 46, 104, 999, 1105, 1, 46, \
        1101, 1000, 1, 20, 4, 20, 1105, 1, 46, 98, 99,],
        [3, 21, 1008, 21, 8, 20, 1005, 20, 22, 107, 8, 21, 20, 1006, 20, 31, 1106, 0, \
        36, 98, 1000, 8, 1002, 21, 125, 20, 4, 20, 1105, 1, 46, 104, 999, 1105, 1, 46, \
        1101, 1000, 1, 20, 4, 20, 1105, 1, 46, 98, 99,],
        [8],
        [1000],
    )
    # fmt: on
    # fmt: off
    run_get_generic(
        [3, 21, 1008, 21, 8, 20, 1005, 20, 22, 107, 8, 21, 20, 1006, 20, 31, 1106, 0, \
        36, 98, 0, 0, 1002, 21, 125, 20, 4, 20, 1105, 1, 46, 104, 999, 1105, 1, 46, \
        1101, 1000, 1, 20, 4, 20, 1105, 1, 46, 98, 99,],
        [3, 21, 1008, 21, 8, 20, 1005, 20, 22, 107, 8, 21, 20, 1006, 20, 31, 1106, 0, \
        36, 98, 1001, 9, 1002, 21, 125, 20, 4, 20, 1105, 1, 46, 104, 999, 1105, 1, 46, \
        1101, 1000, 1, 20, 4, 20, 1105, 1, 46, 98, 99,],
        [9],
        [1001],
    )
    # fmt: on
